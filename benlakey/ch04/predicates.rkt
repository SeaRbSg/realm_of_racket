#lang racket
(zero? 0)
(zero? 42)
(symbol=? 'a 'b)
(symbol=? 'a 'a)
(struct student (name age))
(student? 'foo)
(define bob (student "bob smith" 32))
(student? bob)
(student-name bob)
(string? "foo")
(boolean? "false")
(cons? '(what is that aboot?))
(empty? 'a)
(boolean=? #f #f)
(string=? "hello world" "good bye")
(student? bob)
(equal? bob bob)
(equal? 42 (+ 30 12))
(define (add-to-front-of-123 x)
  (cons x '(1 2 3)))
(add-to-front-of-123 'a)
(add-to-front-of-123 0)
(add-to-front-of-123 '(a b c))
